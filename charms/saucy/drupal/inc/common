#!/bin/bash
#
#    common - Common functions
#
#    Based in Marco Ceppi <marco@ceppi.net> code of the wordpress juju charm.
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# Charm configurations.
DRUPAL_VERSION = $(config-get drupal-version)
REVISION = $(config-get revision)
DEPLOY_SOURCE = $(config-get deploy-source)
DEPLOY_KEY = $(config-get deploy-key)
INSTALL_COMPASS = $(config-get install-compass)
PHP_FPM_UPSTREAM = $(config-get php-fpm-upstream)

hostname=`unit-get public-address`
private_name=`hostname --all-fqdns | cut -f 1 -d ' '`

project_path="/var/www/$private_name"
drupal_path="$project_path/docroot"


# drupal_path="/Users/sebas/Sites/sandbox/d7-stable.sb.local"
# drupal_path="/Users/sebas/Sites/sandbox"
config_file_path="$drupal_path/sites/default/settings.php"
config_db_file_path="$drupal_path/sites/default/settings.db.php"

is_drupal_downloaded() {
  [ -f "$drupal_path/index.php" ]
}

is_drupal_configurated() {
  [ -f "$config_file_path" ]
}

is_drupal_booting() {
  is_drupal_configurated || return -1
  (
    cd $drupal_path
    if [[ ! -z `drush status | grep -e "Drupal bootstrap.*\:.*Successful"` ]]; then
      return 0
    else
      return -1
    fi
  )
}

need_fresh_install() {
  [ ! -f .deploy-source ] || [ `cat .deploy-source` != "$DEPLOY_SOURCE" ]
}

is_project_from_git() {
  # Not very safe.
  [ "$DEPLOY_SOURCE" != "drupal" ]
}

do_git() {
  if [[ -f /home/ubuntu/.ssh/deploy_key ]]; then
    /usr/bin/git-wrapped -i /home/ubuntu/.ssh/deploy_key $@
  fi
}

do_git_flow_init() {
  juju-log "Configurating Git Flow with master and dev branches."

  git config gitflow.branch.master 'master'
  git config gitflow.branch.develop 'dev'
  git config gitflow.prefix.feature 'fs/'
  git config gitflow.prefix.release 'release/'
  git config gitflow.prefix.hotfix 'hotfix/'
  git config gitflow.prefix.support 'support/'
  git config gitflow.prefix.versiontag "$DRUPAL_VERSION.x-"

  # Creating the dev branch if doesn't exist.
  if [[ -z `git branch | grep dev` ]]; then
    do_git branch dev
  fi
}

total_memory() {
  echo $((`awk '/MemTotal/{print $2}' /proc/meminfo` / 1024))
}

apc_shm_size() {
  all_memory=`total_memory`
  if [ -z $all_memory ]; then
    echo 256 # Play it safe, no memory was reported.
    return 0
  fi

  if [ $all_memory -gt 1280 ]; then
    echo 1024
  else
    echo $((all_memory * 80 / 100))
  fi
}